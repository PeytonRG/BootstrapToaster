const toastContainer=document.createElement("div");toastContainer.id="toastContainer",toastContainer.className="position-fixed",toastContainer.setAttribute("aria-live","polite"),toastContainer.setAttribute("aria-atomic","true"),document.body.appendChild(toastContainer);const template=document.createElement("div");template.className="toast",template.setAttribute("role","status"),template.setAttribute("aria-live","polite"),template.setAttribute("aria-atomic","true"),template.setAttribute("data-autohide","false"),template.innerHTML='\n        <div class="toast-header">\n            <span class="status-icon fas mr-2" aria-hidden="true"></span>\n            <strong class="mr-auto toast-title"></strong>\n            <small class="timer">just now</small>\n            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">\n                <span aria-hidden="true">&times;</span>\n            </button>\n        </div>\n        <div class="toast-body"></div>\n    ';const maxToastCount=4;var currentToastCount=0;const TOAST_STATUS={SUCCESS:1,DANGER:2,WARNING:3,INFO:4};function toastGenerator(title,message,status=0,timeout=0){if(currentToastCount>=4)return;let toast=template.cloneNode(deep=!0),toastTitle,toastBody;toast.querySelector(".toast-title").innerText=title,toast.querySelector(".toast-body").innerText=message,_setStatus(toast,status),_renderToast(toast,timeout)}function _setStatus(toast,status){let statusIcon=toast.querySelector(".status-icon");switch(status){case TOAST_STATUS.SUCCESS:statusIcon.classList.add("text-success","fa-check-circle");break;case TOAST_STATUS.DANGER:statusIcon.classList.add("text-danger","fa-times-circle"),toast.setAttribute("role","alert"),toast.setAttribute("aria-live","assertive");break;case TOAST_STATUS.WARNING:statusIcon.classList.add("text-warning","fa-exclamation-circle"),toast.setAttribute("role","alert"),toast.setAttribute("aria-live","assertive");break;case TOAST_STATUS.INFO:statusIcon.classList.add("text-info","fa-info-circle");break;default:statusIcon.classList.add("d-none")}}function _renderToast(toast,timeout){timeout>0&&(toast.setAttribute("data-delay",timeout),toast.setAttribute("data-autohide",!0)),toastContainer.appendChild(toast),$(toast).toast("show"),currentToastCount++;let minutes=1,timer=setInterval((function(){let timerText;toast.querySelector(".timer").innerText=`${minutes}m ago`,minutes++}),6e4);$(toast).on("hidden.bs.toast",(function(){clearInterval(timer),toastContainer.removeChild(toast),currentToastCount--}))}
//# sourceMappingURL=bootstrap-toast.min.js.map